'------------------------------------------------------------------------------
' <auto-generated>
'     此代码由工具生成。
'     运行时版本:4.0.30319.17929
'
'     对此文件的更改可能会导致不正确的行为，并且如果
'     重新生成代码，这些更改将会丢失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'此源代码是由 Microsoft.VSDesigner 4.0.30319.17929 版自动生成。
'
Namespace KLMessageWebService
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="KLMessageWebServiceSoap", [Namespace]:="http://KLMessage.org/")>  _
    Partial Public Class KLMessageWebService
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private SendMessageByRecipientsStringOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendMessageOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendMessageWithMessageIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendMessageWithUserInfoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendMessageWithUserAndMessageIDOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SendMessageExOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.Test.My.MySettings.Default.Test_KLMessageWebService_KLMessageWebService
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event SendMessageByRecipientsStringCompleted As SendMessageByRecipientsStringCompletedEventHandler
        
        '''<remarks/>
        Public Event SendMessageCompleted As SendMessageCompletedEventHandler
        
        '''<remarks/>
        Public Event SendMessageWithMessageIDCompleted As SendMessageWithMessageIDCompletedEventHandler
        
        '''<remarks/>
        Public Event SendMessageWithUserInfoCompleted As SendMessageWithUserInfoCompletedEventHandler
        
        '''<remarks/>
        Public Event SendMessageWithUserAndMessageIDCompleted As SendMessageWithUserAndMessageIDCompletedEventHandler
        
        '''<remarks/>
        Public Event SendMessageExCompleted As SendMessageExCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("SendMessageByRecipientsString", RequestNamespace:="", ResponseNamespace:="http://KLMessage.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function SendMessageByRecipientsString(ByVal RecipientsSource As String, ByVal Content As String) As Integer
            Dim results() As Object = Me.Invoke("SendMessageByRecipientsString", New Object() {RecipientsSource, Content})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendMessageByRecipientsStringAsync(ByVal RecipientsSource As String, ByVal Content As String)
            Me.SendMessageByRecipientsStringAsync(RecipientsSource, Content, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendMessageByRecipientsStringAsync(ByVal RecipientsSource As String, ByVal Content As String, ByVal userState As Object)
            If (Me.SendMessageByRecipientsStringOperationCompleted Is Nothing) Then
                Me.SendMessageByRecipientsStringOperationCompleted = AddressOf Me.OnSendMessageByRecipientsStringOperationCompleted
            End If
            Me.InvokeAsync("SendMessageByRecipientsString", New Object() {RecipientsSource, Content}, Me.SendMessageByRecipientsStringOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendMessageByRecipientsStringOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendMessageByRecipientsStringCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendMessageByRecipientsStringCompleted(Me, New SendMessageByRecipientsStringCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("SendMessage", RequestNamespace:="", ResponseNamespace:="http://KLMessage.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function SendMessage(<System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="")> ByVal RecipientsSource() As String, ByVal Content As String) As Integer
            Dim results() As Object = Me.Invoke("SendMessage", New Object() {RecipientsSource, Content})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendMessageAsync(ByVal RecipientsSource() As String, ByVal Content As String)
            Me.SendMessageAsync(RecipientsSource, Content, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendMessageAsync(ByVal RecipientsSource() As String, ByVal Content As String, ByVal userState As Object)
            If (Me.SendMessageOperationCompleted Is Nothing) Then
                Me.SendMessageOperationCompleted = AddressOf Me.OnSendMessageOperationCompleted
            End If
            Me.InvokeAsync("SendMessage", New Object() {RecipientsSource, Content}, Me.SendMessageOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendMessageOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendMessageCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendMessageCompleted(Me, New SendMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("SendMessageWithMessageID", RequestNamespace:="", ResponseNamespace:="http://KLMessage.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function SendMessageWithMessageID(ByVal UserMessageID As String, <System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="")> ByVal RecipientsSource() As String, ByVal Content As String) As Integer
            Dim results() As Object = Me.Invoke("SendMessageWithMessageID", New Object() {UserMessageID, RecipientsSource, Content})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendMessageWithMessageIDAsync(ByVal UserMessageID As String, ByVal RecipientsSource() As String, ByVal Content As String)
            Me.SendMessageWithMessageIDAsync(UserMessageID, RecipientsSource, Content, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendMessageWithMessageIDAsync(ByVal UserMessageID As String, ByVal RecipientsSource() As String, ByVal Content As String, ByVal userState As Object)
            If (Me.SendMessageWithMessageIDOperationCompleted Is Nothing) Then
                Me.SendMessageWithMessageIDOperationCompleted = AddressOf Me.OnSendMessageWithMessageIDOperationCompleted
            End If
            Me.InvokeAsync("SendMessageWithMessageID", New Object() {UserMessageID, RecipientsSource, Content}, Me.SendMessageWithMessageIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendMessageWithMessageIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendMessageWithMessageIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendMessageWithMessageIDCompleted(Me, New SendMessageWithMessageIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("SendMessageWithUserInfo", RequestNamespace:="", ResponseNamespace:="http://KLMessage.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function SendMessageWithUserInfo(ByVal Usercode As String, ByVal Password As String, <System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="")> ByVal RecipientsSource() As String, ByVal Content As String) As Integer
            Dim results() As Object = Me.Invoke("SendMessageWithUserInfo", New Object() {Usercode, Password, RecipientsSource, Content})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendMessageWithUserInfoAsync(ByVal Usercode As String, ByVal Password As String, ByVal RecipientsSource() As String, ByVal Content As String)
            Me.SendMessageWithUserInfoAsync(Usercode, Password, RecipientsSource, Content, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendMessageWithUserInfoAsync(ByVal Usercode As String, ByVal Password As String, ByVal RecipientsSource() As String, ByVal Content As String, ByVal userState As Object)
            If (Me.SendMessageWithUserInfoOperationCompleted Is Nothing) Then
                Me.SendMessageWithUserInfoOperationCompleted = AddressOf Me.OnSendMessageWithUserInfoOperationCompleted
            End If
            Me.InvokeAsync("SendMessageWithUserInfo", New Object() {Usercode, Password, RecipientsSource, Content}, Me.SendMessageWithUserInfoOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendMessageWithUserInfoOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendMessageWithUserInfoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendMessageWithUserInfoCompleted(Me, New SendMessageWithUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("SendMessageWithUserAndMessageID", RequestNamespace:="", ResponseNamespace:="http://KLMessage.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function SendMessageWithUserAndMessageID(ByVal Usercode As String, ByVal Password As String, ByVal UserMessageID As String, <System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="")> ByVal RecipientsSource() As String, ByVal Content As String) As Integer
            Dim results() As Object = Me.Invoke("SendMessageWithUserAndMessageID", New Object() {Usercode, Password, UserMessageID, RecipientsSource, Content})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendMessageWithUserAndMessageIDAsync(ByVal Usercode As String, ByVal Password As String, ByVal UserMessageID As String, ByVal RecipientsSource() As String, ByVal Content As String)
            Me.SendMessageWithUserAndMessageIDAsync(Usercode, Password, UserMessageID, RecipientsSource, Content, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendMessageWithUserAndMessageIDAsync(ByVal Usercode As String, ByVal Password As String, ByVal UserMessageID As String, ByVal RecipientsSource() As String, ByVal Content As String, ByVal userState As Object)
            If (Me.SendMessageWithUserAndMessageIDOperationCompleted Is Nothing) Then
                Me.SendMessageWithUserAndMessageIDOperationCompleted = AddressOf Me.OnSendMessageWithUserAndMessageIDOperationCompleted
            End If
            Me.InvokeAsync("SendMessageWithUserAndMessageID", New Object() {Usercode, Password, UserMessageID, RecipientsSource, Content}, Me.SendMessageWithUserAndMessageIDOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendMessageWithUserAndMessageIDOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendMessageWithUserAndMessageIDCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendMessageWithUserAndMessageIDCompleted(Me, New SendMessageWithUserAndMessageIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapRpcMethodAttribute("SendMessageEx", RequestNamespace:="", ResponseNamespace:="http://KLMessage.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal)>  _
        Public Function SendMessageEx(ByVal UserMessageID As String, ByVal Usercode As String, ByVal Password As String, <System.Xml.Serialization.XmlArrayItemAttribute([Namespace]:="")> ByVal RecipientsSource() As String, ByVal Content As String, ByVal CallbackURL As String, ByVal ThreadMode As Integer, ByVal MaxBatchSize As Integer, ByVal InvockPersecond As Double, ByVal QueueSize As Long, ByVal Simulation As Boolean, ByVal RecordLog As Boolean, ByVal AddTag As Boolean) As Integer
            Dim results() As Object = Me.Invoke("SendMessageEx", New Object() {UserMessageID, Usercode, Password, RecipientsSource, Content, CallbackURL, ThreadMode, MaxBatchSize, InvockPersecond, QueueSize, Simulation, RecordLog, AddTag})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub SendMessageExAsync(ByVal UserMessageID As String, ByVal Usercode As String, ByVal Password As String, ByVal RecipientsSource() As String, ByVal Content As String, ByVal CallbackURL As String, ByVal ThreadMode As Integer, ByVal MaxBatchSize As Integer, ByVal InvockPersecond As Double, ByVal QueueSize As Long, ByVal Simulation As Boolean, ByVal RecordLog As Boolean, ByVal AddTag As Boolean)
            Me.SendMessageExAsync(UserMessageID, Usercode, Password, RecipientsSource, Content, CallbackURL, ThreadMode, MaxBatchSize, InvockPersecond, QueueSize, Simulation, RecordLog, AddTag, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub SendMessageExAsync(ByVal UserMessageID As String, ByVal Usercode As String, ByVal Password As String, ByVal RecipientsSource() As String, ByVal Content As String, ByVal CallbackURL As String, ByVal ThreadMode As Integer, ByVal MaxBatchSize As Integer, ByVal InvockPersecond As Double, ByVal QueueSize As Long, ByVal Simulation As Boolean, ByVal RecordLog As Boolean, ByVal AddTag As Boolean, ByVal userState As Object)
            If (Me.SendMessageExOperationCompleted Is Nothing) Then
                Me.SendMessageExOperationCompleted = AddressOf Me.OnSendMessageExOperationCompleted
            End If
            Me.InvokeAsync("SendMessageEx", New Object() {UserMessageID, Usercode, Password, RecipientsSource, Content, CallbackURL, ThreadMode, MaxBatchSize, InvockPersecond, QueueSize, Simulation, RecordLog, AddTag}, Me.SendMessageExOperationCompleted, userState)
        End Sub
        
        Private Sub OnSendMessageExOperationCompleted(ByVal arg As Object)
            If (Not (Me.SendMessageExCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SendMessageExCompleted(Me, New SendMessageExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SendMessageByRecipientsStringCompletedEventHandler(ByVal sender As Object, ByVal e As SendMessageByRecipientsStringCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendMessageByRecipientsStringCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SendMessageCompletedEventHandler(ByVal sender As Object, ByVal e As SendMessageCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendMessageCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SendMessageWithMessageIDCompletedEventHandler(ByVal sender As Object, ByVal e As SendMessageWithMessageIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendMessageWithMessageIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SendMessageWithUserInfoCompletedEventHandler(ByVal sender As Object, ByVal e As SendMessageWithUserInfoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendMessageWithUserInfoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SendMessageWithUserAndMessageIDCompletedEventHandler(ByVal sender As Object, ByVal e As SendMessageWithUserAndMessageIDCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendMessageWithUserAndMessageIDCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")>  _
    Public Delegate Sub SendMessageExCompletedEventHandler(ByVal sender As Object, ByVal e As SendMessageExCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SendMessageExCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
End Namespace
